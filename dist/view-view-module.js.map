{"version":3,"sources":["webpack:///./src/app/layout/view/view-routing.module.ts","webpack:///./src/app/layout/view/view.component.html","webpack:///./src/app/layout/view/view.component.scss","webpack:///./src/app/layout/view/view.component.ts","webpack:///./src/app/layout/view/view.module.ts"],"names":[],"mappings":"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","file":"view-view-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { viewComponent } from './view.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: viewComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class viewRoutingModule {}\n","module.exports = \"<mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n        <!-- ID Column -->\\n        <ng-container matColumnDef=\\\"id\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </td>\\n        </ng-container>\\n\\n        <!-- Progress Column -->\\n        <ng-container matColumnDef=\\\"progress\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.progress}}% </td>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </td>\\n        </ng-container>\\n\\n        <!-- Color Column -->\\n        <ng-container matColumnDef=\\\"color\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Color </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\"> {{row.color}} </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n\\n    <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd,\\nth {\\n  width: 25%; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\n\n@Component({\n    selector: 'app-view',\n    templateUrl: './view.component.html',\n    styleUrls: ['./view.component.scss']\n})\nexport class viewComponent implements OnInit {\n    displayedColumns = ['id', 'name', 'progress', 'color'];\n    dataSource: MatTableDataSource<UserData>;\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n\n    constructor() {\n        // Create 100 users\n        const users: UserData[] = [];\n        for (let i = 1; i <= 100; i++) {\n            users.push(createNewUser(i));\n        }\n\n        // Assign the data to the data source for the table to render\n        this.dataSource = new MatTableDataSource(users);\n    }\n\n    ngOnInit() {\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n    }\n\n    applyFilter(filterValue: string) {\n        filterValue = filterValue.trim(); // Remove whitespace\n        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n        this.dataSource.filter = filterValue;\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n}\n\n/** Constants used to fill up our data base. */\nconst COLORS = [\n    'maroon',\n    'red',\n    'orange',\n    'yellow',\n    'olive',\n    'green',\n    'purple',\n    'fuchsia',\n    'lime',\n    'teal',\n    'aqua',\n    'blue',\n    'navy',\n    'black',\n    'gray'\n];\nconst NAMES = [\n    'Maia',\n    'Asher',\n    'Olivia',\n    'Atticus',\n    'Amelia',\n    'Jack',\n    'Charlotte',\n    'Theodore',\n    'Isla',\n    'Oliver',\n    'Isabella',\n    'Jasper',\n    'Cora',\n    'Levi',\n    'Violet',\n    'Arthur',\n    'Mia',\n    'Thomas',\n    'Elizabeth'\n];\n\nexport interface UserData {\n    id: string;\n    name: string;\n    progress: string;\n    color: string;\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n    const name =\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\n        ' ' +\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\n        '.';\n\n    return {\n        id: id.toString(),\n        name: name,\n        progress: Math.round(Math.random() * 100).toString(),\n        color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n    };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatTableModule } from '@angular/material';\nimport { MatFormFieldModule, MatPaginatorModule } from '@angular/material';\nimport { MatInputModule } from '@angular/material';\n\nimport { viewRoutingModule } from './view-routing.module';\nimport { viewComponent } from './view.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        viewRoutingModule,\n        MatTableModule,\n        MatFormFieldModule,\n        MatPaginatorModule,\n        MatInputModule\n    ],\n    declarations: [viewComponent]\n})\nexport class viewModule {}\n"],"sourceRoot":""}