{"version":3,"sources":["webpack:///./src/app/app.service.ts","webpack:///./src/app/layout/new/new-routing.module.ts","webpack:///./src/app/layout/new/new.component.html","webpack:///./src/app/layout/new/new.component.scss","webpack:///./src/app/layout/new/new.component.ts","webpack:///./src/app/layout/new/new.module.ts"],"names":[],"mappings":"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","file":"new-new-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\nconst apiUrl = \"/api\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  constructor(private http: HttpClient) { }\n\n    private handleError(error: HttpErrorResponse) {\n      if (error.error instanceof ErrorEvent) {\n        // A client-side or network error occurred. Handle it accordingly.\n        console.error('An error occurred:', error.error.message);\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        console.error(\n          `Backend returned code ${error.status}, ` +\n          `body was: ${error.error}`);\n      }\n      // return an observable with a user-facing error message\n      return throwError('Something bad happened; please try again later.');\n    };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getApps(): Observable<any> {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n  getAttributes(): Observable<any> {\n    alert(\"getAttributes\");\n    return this.http.get(apiUrl, httpOptions).pipe(\n\n      catchError(this.handleError));\n  }\n\n  postQuote(data): Observable<any> {\n    alert(\"here too\"+apiUrl);\n    return this.http.post(apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { newComponent } from './new.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: newComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class newRoutingModule {}\n","module.exports = \"\\n<form [formGroup]=\\\"attributeForm\\\" (ngSubmit)=\\\"onFormSubmit(attributeForm.value)\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"ISBN\\\" formControlName=\\\"isbn\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!attributeForm.get('isbn').valid && attributeForm.get('isbn').touched\\\">Please enter ISBN</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!attributeForm.get('title').valid && attributeForm.get('title').touched\\\">Please enter Book Title</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Author\\\" formControlName=\\\"author\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!attributeForm.get('author').valid && attributeForm.get('author').touched\\\">Please enter Book Author</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"></textarea>\\n    <mat-error>\\n      <span *ngIf=\\\"!attributeForm.get('description').valid && attributeForm.get('description').touched\\\">Please enter Book Description</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Publisher\\\" formControlName=\\\"publisher\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!attributeForm.get('publisher').valid && attributeForm.get('publisher').touched\\\">Please enter Publisher</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Published Year\\\" formControlName=\\\"published_year\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!attributeForm.get('published_year').valid && attributeForm.get('published_year').touched\\\">Please enter Published Year</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!attributeForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n</form>\\n\"","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px; }\\n\\n.button-row {\\n  margin: 10px 0; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AppService } from '../../app.service';\n//import { DataSource } from '@angular/cdk/collections';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'app-new',\n    templateUrl: './new.component.html',\n    styleUrls: ['./new.component.scss']\n})\nexport class newComponent implements OnInit {\n  attributeForm: FormGroup;\n  isbn:string='';\n  title:string='';\n  description:string='';\n  author:string='';\n  publisher:string='';\n  published_year:string='';\n  //dataSource = new AppDataSource(this.api);\n\n  constructor(private router: Router, private api: AppService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.attributeForm = this.formBuilder.group({\n     'isbn' : [null, Validators.required],\n     'title' : [null, Validators.required],\n     'description' : [null, Validators.required],\n     'author' : [null, Validators.required],\n     'publisher' : [null, Validators.required],\n     'published_year' : [null, Validators.required]\n   });\n    //this.api.getAttributes()\n    //   .subscribe(res => {\n      //   console.log(res);\n//         this.books = res;\n  //     }, err => {\n    //     console.log(err);\n      // });\n   }\n\n\n  onFormSubmit(form:NgForm) {\n    alert(\"here\");\n    this.api.postQuote(form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/dashBoard']);\n        }, (err) => {\n          console.log(err);\n        });\n  }\n}\n//export class AppDataSource extends DataSource<any> {\n  //constructor(private api: AppService) {\n    //super()\n  //}\n\n  //connect() {\n    //return this.api.getAttributes();\n  //}\n\n  //disconnect() {\n\n  //}\n//}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule as FormModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n    MatAutocompleteModule, MatCardModule, MatCheckboxModule, MatDatepickerModule,\n    MatFormFieldModule, MatInputModule, MatNativeDateModule, MatRadioModule, MatSelectModule,\n    MatSliderModule, MatSlideToggleModule, MatIconModule\n} from '@angular/material';\nimport { newRoutingModule } from './new-routing.module';\nimport { newComponent } from './new.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        newRoutingModule,\n        MatAutocompleteModule,\n        FlexLayoutModule,\n        FormModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatSliderModule,\n        MatIconModule\n    ],\n    declarations: [\n        newComponent\n    ]\n})\nexport class newModule {}\n"],"sourceRoot":""}